
//! Autogenerated weights for tellor
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-10, STEPS: `2`, REPEAT: `2`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Pawans-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-template-node
// benchmark
// pallet
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// tellor
// --extrinsic
// *
// --steps
// 2
// --repeat
// 2
// --output
// ./weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for tellor.
pub trait WeightInfo {
	fn register() -> Weight;
	fn report_stake_deposited() -> Weight;
	fn report_staking_withdraw_request() -> Weight;
	fn report_stake_withdrawn() -> Weight;
	fn setup_data_feed(q: u32, ) -> Weight;
	fn fund_feed() -> Weight;
	fn submit_value(q: u32, v: u32, ) -> Weight;
	fn add_staking_rewards() -> Weight;
	fn update_stake_amount() -> Weight;
	fn tip(q: u32, s: u32, ) -> Weight;
	fn claim_onetime_tip(s: u32, t: u32, ) -> Weight;
	fn claim_tip(s: u32, t: u32, ) -> Weight;
	fn begin_dispute() -> Weight;
	fn vote() -> Weight;
	fn report_vote_tallied() -> Weight;
	fn report_vote_executed(r: u32, ) -> Weight;
	fn report_slash() -> Weight;
	fn send_votes(s: u32, ) -> Weight;
	fn vote_on_multiple_disputes(s: u32, ) -> Weight;
	fn on_initialize() -> Weight;
}

/// Weights for tellor using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn register() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `32`
		//  Estimated: `1489`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(26_000_000, 1489)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:0)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor VoteCount (r:1 w:0)
	/// Proof: Tellor VoteCount (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:1)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:1)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakers (r:1 w:1)
	/// Proof: Tellor TotalStakers (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn report_stake_deposited() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `450`
		//  Estimated: `20796`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(38_000_000, 20796)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:0)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor VoteCount (r:1 w:0)
	/// Proof: Tellor VoteCount (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:1)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:1)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakers (r:1 w:1)
	/// Proof: Tellor TotalStakers (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor ToWithdraw (r:1 w:1)
	/// Proof: Tellor ToWithdraw (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn report_staking_withdraw_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `450`
		//  Estimated: `22313`
		// Minimum execution time: 45_000_000 picoseconds.
		Weight::from_parts(69_000_000, 22313)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ToWithdraw (r:1 w:1)
	/// Proof: Tellor ToWithdraw (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn report_stake_withdrawn() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `506`
		//  Estimated: `6688`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 6688)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Tellor DataFeeds (r:1 w:1)
	/// Proof: Tellor DataFeeds (max_values: None, max_size: Some(142), added: 2617, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor FeedsWithFunding (r:1 w:1)
	/// Proof: Tellor FeedsWithFunding (max_values: Some(1), max_size: Some(321), added: 816, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:1)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor QueryData (r:0 w:1)
	/// Proof: Tellor QueryData (max_values: None, max_size: Some(546), added: 3021, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdFromDataFeedId (r:0 w:1)
	/// Proof: Tellor QueryIdFromDataFeedId (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// The range of component `q` is `[1, 512]`.
	fn setup_data_feed(_q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `591`
		//  Estimated: `15138`
		// Minimum execution time: 53_000_000 picoseconds.
		Weight::from_parts(54_500_978, 15138)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: Tellor DataFeeds (r:1 w:1)
	/// Proof: Tellor DataFeeds (max_values: None, max_size: Some(142), added: 2617, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:1)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn fund_feed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `619`
		//  Estimated: `13332`
		// Minimum execution time: 32_000_000 picoseconds.
		Weight::from_parts(33_000_000, 13332)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Tellor ReportedTimestampCount (r:1 w:1)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportersByTimestamp (r:1 w:1)
	/// Proof: Tellor ReportersByTimestamp (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: Tellor StakerReportsSubmittedByQueryId (r:1 w:1)
	/// Proof: Tellor StakerReportsSubmittedByQueryId (max_values: None, max_size: Some(96), added: 2571, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:0 w:1)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestamps (r:0 w:1)
	/// Proof: Tellor ReportedTimestamps (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastNewValue (r:0 w:1)
	/// Proof: Tellor TimeOfLastNewValue (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsToBlockNumber (r:0 w:1)
	/// Proof: Tellor ReportedTimestampsToBlockNumber (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:0 w:1)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// The range of component `q` is `[1, 512]`.
	/// The range of component `v` is `[1, 256]`.
	fn submit_value(_q: u32, _v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `457`
		//  Estimated: `17303`
		// Minimum execution time: 37_000_000 picoseconds.
		Weight::from_parts(41_506_853, 17303)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:0)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:0)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:0)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:0 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn add_staking_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `149`
		//  Estimated: `13701`
		// Minimum execution time: 37_000_000 picoseconds.
		Weight::from_parts(41_000_000, 13701)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:2 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:2 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:2 w:0)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:2 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:1)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeFee (r:1 w:1)
	/// Proof: Tellor DisputeFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn update_stake_amount() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `874`
		//  Estimated: `29205`
		// Minimum execution time: 56_000_000 picoseconds.
		Weight::from_parts(58_000_000, 29205)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Tellor Tips (r:1 w:1)
	/// Proof: Tellor Tips (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdsWithFundingIndex (r:1 w:1)
	/// Proof: Tellor QueryIdsWithFundingIndex (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:1 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:5000 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:5000 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdsWithFunding (r:1 w:1)
	/// Proof: Tellor QueryIdsWithFunding (max_values: Some(1), max_size: Some(321), added: 816, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:1)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor QueryData (r:0 w:1)
	/// Proof: Tellor QueryData (max_values: None, max_size: Some(546), added: 3021, mode: MaxEncodedLen)
	/// The range of component `q` is `[1, 512]`.
	/// The range of component `s` is `[2, 5000]`.
	fn tip(q: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `908 + s * (31 ±0)`
		//  Estimated: `25904 + s * (5324 ±0)`
		// Minimum execution time: 73_000_000 picoseconds.
		Weight::from_parts(73_000_000, 25904)
			// Standard Error: 455_948
			.saturating_add(Weight::from_parts(620_862, 0).saturating_mul(q.into()))
			// Standard Error: 46_689
			.saturating_add(Weight::from_parts(6_704_836, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(s.into())))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 5324).saturating_mul(s.into()))
	}
	/// Storage: Tellor Tips (r:1 w:1)
	/// Proof: Tellor Tips (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:10 w:0)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor ReportersByTimestamp (r:10 w:0)
	/// Proof: Tellor ReportersByTimestamp (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:1 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:5000 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:5000 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:1)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:0)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:0)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdsWithFundingIndex (r:1 w:1)
	/// Proof: Tellor QueryIdsWithFundingIndex (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdsWithFunding (r:1 w:1)
	/// Proof: Tellor QueryIdsWithFunding (max_values: Some(1), max_size: Some(321), added: 816, mode: MaxEncodedLen)
	/// The range of component `s` is `[1, 5000]`.
	/// The range of component `t` is `[1, 10]`.
	fn claim_onetime_tip(s: u32, t: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + s * (33 ±0) + t * (1022 ±0)`
		//  Estimated: `44890 + s * (5321 ±0) + t * (2138 ±248)`
		// Minimum execution time: 113_000_000 picoseconds.
		Weight::from_parts(113_000_000, 44890)
			// Standard Error: 50_232
			.saturating_add(Weight::from_parts(6_975_683, 0).saturating_mul(s.into()))
			// Standard Error: 25_053_798
			.saturating_add(Weight::from_parts(30_781_775, 0).saturating_mul(t.into()))
			.saturating_add(T::DbWeight::get().reads(17_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(s.into())))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes(8_u64))
			.saturating_add(Weight::from_parts(0, 5321).saturating_mul(s.into()))
			.saturating_add(Weight::from_parts(0, 2138).saturating_mul(t.into()))
	}
	/// Storage: Tellor DataFeeds (r:1 w:1)
	/// Proof: Tellor DataFeeds (max_values: None, max_size: Some(142), added: 2617, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportersByTimestamp (r:10 w:0)
	/// Proof: Tellor ReportersByTimestamp (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: Tellor DataFeedRewardClaimed (r:10 w:10)
	/// Proof: Tellor DataFeedRewardClaimed (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:11 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:1 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:29 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:10 w:0)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor FeedsWithFunding (r:1 w:1)
	/// Proof: Tellor FeedsWithFunding (max_values: Some(1), max_size: Some(321), added: 816, mode: MaxEncodedLen)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:1)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:0)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:0)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// The range of component `s` is `[1, 5000]`.
	/// The range of component `t` is `[1, 10]`.
	fn claim_tip(s: u32, _t: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1359 + s * (7 ±0)`
		//  Estimated: `39294 + s * (35 ±0)`
		// Minimum execution time: 100_000_000 picoseconds.
		Weight::from_parts(258_556_822, 39294)
			// Standard Error: 11_761
			.saturating_add(Weight::from_parts(332_066, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(15_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 35).saturating_mul(s.into()))
	}
	/// Storage: Tellor StakerDetails (r:2 w:0)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestamps (r:1 w:0)
	/// Proof: Tellor ReportedTimestamps (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Tellor VoteRounds (r:1 w:1)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeFee (r:1 w:0)
	/// Proof: Tellor DisputeFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor OpenDisputesOnId (r:1 w:1)
	/// Proof: Tellor OpenDisputesOnId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:1 w:1)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor ReportersByTimestamp (r:1 w:0)
	/// Proof: Tellor ReportersByTimestamp (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:1 w:1)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:1 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor VoteCount (r:1 w:1)
	/// Proof: Tellor VoteCount (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:0 w:1)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Tellor PendingVotes (r:0 w:1)
	/// Proof: Tellor PendingVotes (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeIdsByReporter (r:0 w:1)
	/// Proof: Tellor DisputeIdsByReporter (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeInfo (r:0 w:1)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	fn begin_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1313`
		//  Estimated: `44978`
		// Minimum execution time: 95_000_000 picoseconds.
		Weight::from_parts(104_000_000, 44978)
			.saturating_add(T::DbWeight::get().reads(16_u64))
			.saturating_add(T::DbWeight::get().writes(11_u64))
	}
	/// Storage: Tellor DisputeInfo (r:1 w:0)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	/// Storage: Tellor VoteRounds (r:1 w:0)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:1 w:1)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Tellor Votes (r:1 w:1)
	/// Proof: Tellor Votes (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: Tellor StakerDetails (r:1 w:0)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:0)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor VoteTallyByAddress (r:1 w:1)
	/// Proof: Tellor VoteTallyByAddress (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1063`
		//  Estimated: `25355`
		// Minimum execution time: 33_000_000 picoseconds.
		Weight::from_parts(34_000_000, 25355)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Tellor VoteRounds (r:1 w:0)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:1 w:1)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeInfo (r:1 w:0)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	fn report_vote_tallied() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1051`
		//  Estimated: `12557`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 12557)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Tellor DisputeInfo (r:1 w:0)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	/// Storage: Tellor VoteRounds (r:1 w:0)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:10 w:1)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor OpenDisputesOnId (r:1 w:1)
	/// Proof: Tellor OpenDisputesOnId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: System Account (r:11 w:11)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 255]`.
	fn report_vote_executed(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1321 + r * (22 ±0)`
		//  Estimated: `22078 + r * (188 ±0)`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(48_797_244, 22078)
			// Standard Error: 1_968
			.saturating_add(Weight::from_parts(702_755, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 188).saturating_mul(r.into()))
	}
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:1)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:1)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor VoteCount (r:1 w:0)
	/// Proof: Tellor VoteCount (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor VoteTallyByAddress (r:1 w:0)
	/// Proof: Tellor VoteTallyByAddress (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:1)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakers (r:1 w:1)
	/// Proof: Tellor TotalStakers (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor ToWithdraw (r:1 w:1)
	/// Proof: Tellor ToWithdraw (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn report_slash() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1003`
		//  Estimated: `25842`
		// Minimum execution time: 48_000_000 picoseconds.
		Weight::from_parts(54_000_000, 25842)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor PendingVotes (r:256 w:245)
	/// Proof: Tellor PendingVotes (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:245 w:245)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// The range of component `s` is `[1, 255]`.
	fn send_votes(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `348 + s * (290 ±0)`
		//  Estimated: `671654 + s * (2516 ±0)`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(13_000_000, 671654)
			// Standard Error: 119_194
			.saturating_add(Weight::from_parts(15_366_438, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(s.into())))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(s.into())))
			.saturating_add(Weight::from_parts(0, 2516).saturating_mul(s.into()))
	}
	/// Storage: Tellor DisputeInfo (r:10 w:0)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	/// Storage: Tellor VoteRounds (r:10 w:0)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:10 w:10)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Tellor Votes (r:10 w:10)
	/// Proof: Tellor Votes (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: Tellor StakerDetails (r:1 w:0)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:0)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor VoteTallyByAddress (r:1 w:1)
	/// Proof: Tellor VoteTallyByAddress (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// The range of component `s` is `[2, 10]`.
	fn vote_on_multiple_disputes(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `754 + s * (358 ±0)`
		//  Estimated: `14696 + s * (10659 ±0)`
		// Minimum execution time: 61_000_000 picoseconds.
		Weight::from_parts(16_875_000, 14696)
			// Standard Error: 534_000
			.saturating_add(Weight::from_parts(22_812_500, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(s.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(s.into())))
			.saturating_add(Weight::from_parts(0, 10659).saturating_mul(s.into()))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor LastStakeAmountUpdate (r:1 w:1)
	/// Proof: Tellor LastStakeAmountUpdate (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:2 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:2 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:2 w:0)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:2 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:1)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeFee (r:1 w:1)
	/// Proof: Tellor DisputeFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor PendingVotes (r:4 w:0)
	/// Proof: Tellor PendingVotes (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	fn on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1461`
		//  Estimated: `41752`
		// Minimum execution time: 75_000_000 picoseconds.
		Weight::from_parts(77_000_000, 41752)
			.saturating_add(T::DbWeight::get().reads(16_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn register() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `32`
		//  Estimated: `1489`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(26_000_000, 1489)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:0)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor VoteCount (r:1 w:0)
	/// Proof: Tellor VoteCount (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:1)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:1)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakers (r:1 w:1)
	/// Proof: Tellor TotalStakers (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn report_stake_deposited() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `450`
		//  Estimated: `20796`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(38_000_000, 20796)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:0)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor VoteCount (r:1 w:0)
	/// Proof: Tellor VoteCount (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:1)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:1)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakers (r:1 w:1)
	/// Proof: Tellor TotalStakers (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor ToWithdraw (r:1 w:1)
	/// Proof: Tellor ToWithdraw (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn report_staking_withdraw_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `450`
		//  Estimated: `22313`
		// Minimum execution time: 45_000_000 picoseconds.
		Weight::from_parts(69_000_000, 22313)
			.saturating_add(RocksDbWeight::get().reads(12_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ToWithdraw (r:1 w:1)
	/// Proof: Tellor ToWithdraw (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn report_stake_withdrawn() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `506`
		//  Estimated: `6688`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 6688)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Tellor DataFeeds (r:1 w:1)
	/// Proof: Tellor DataFeeds (max_values: None, max_size: Some(142), added: 2617, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor FeedsWithFunding (r:1 w:1)
	/// Proof: Tellor FeedsWithFunding (max_values: Some(1), max_size: Some(321), added: 816, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:1)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor QueryData (r:0 w:1)
	/// Proof: Tellor QueryData (max_values: None, max_size: Some(546), added: 3021, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdFromDataFeedId (r:0 w:1)
	/// Proof: Tellor QueryIdFromDataFeedId (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// The range of component `q` is `[1, 512]`.
	fn setup_data_feed(_q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `591`
		//  Estimated: `15138`
		// Minimum execution time: 53_000_000 picoseconds.
		Weight::from_parts(54_500_978, 15138)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: Tellor DataFeeds (r:1 w:1)
	/// Proof: Tellor DataFeeds (max_values: None, max_size: Some(142), added: 2617, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:1)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn fund_feed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `619`
		//  Estimated: `13332`
		// Minimum execution time: 32_000_000 picoseconds.
		Weight::from_parts(33_000_000, 13332)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Tellor ReportedTimestampCount (r:1 w:1)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportersByTimestamp (r:1 w:1)
	/// Proof: Tellor ReportersByTimestamp (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: Tellor StakerReportsSubmittedByQueryId (r:1 w:1)
	/// Proof: Tellor StakerReportsSubmittedByQueryId (max_values: None, max_size: Some(96), added: 2571, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:0 w:1)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestamps (r:0 w:1)
	/// Proof: Tellor ReportedTimestamps (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastNewValue (r:0 w:1)
	/// Proof: Tellor TimeOfLastNewValue (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsToBlockNumber (r:0 w:1)
	/// Proof: Tellor ReportedTimestampsToBlockNumber (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:0 w:1)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// The range of component `q` is `[1, 512]`.
	/// The range of component `v` is `[1, 256]`.
	fn submit_value(_q: u32, _v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `457`
		//  Estimated: `17303`
		// Minimum execution time: 37_000_000 picoseconds.
		Weight::from_parts(41_506_853, 17303)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:0)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:0)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:0)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:0 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn add_staking_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `149`
		//  Estimated: `13701`
		// Minimum execution time: 37_000_000 picoseconds.
		Weight::from_parts(41_000_000, 13701)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:2 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:2 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:2 w:0)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:2 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:1)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeFee (r:1 w:1)
	/// Proof: Tellor DisputeFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn update_stake_amount() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `874`
		//  Estimated: `29205`
		// Minimum execution time: 56_000_000 picoseconds.
		Weight::from_parts(58_000_000, 29205)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Tellor Tips (r:1 w:1)
	/// Proof: Tellor Tips (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdsWithFundingIndex (r:1 w:1)
	/// Proof: Tellor QueryIdsWithFundingIndex (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:1 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:5000 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:5000 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdsWithFunding (r:1 w:1)
	/// Proof: Tellor QueryIdsWithFunding (max_values: Some(1), max_size: Some(321), added: 816, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:1)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor QueryData (r:0 w:1)
	/// Proof: Tellor QueryData (max_values: None, max_size: Some(546), added: 3021, mode: MaxEncodedLen)
	/// The range of component `q` is `[1, 512]`.
	/// The range of component `s` is `[2, 5000]`.
	fn tip(q: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `908 + s * (31 ±0)`
		//  Estimated: `25904 + s * (5324 ±0)`
		// Minimum execution time: 73_000_000 picoseconds.
		Weight::from_parts(73_000_000, 25904)
			// Standard Error: 455_948
			.saturating_add(Weight::from_parts(620_862, 0).saturating_mul(q.into()))
			// Standard Error: 46_689
			.saturating_add(Weight::from_parts(6_704_836, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(s.into())))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 5324).saturating_mul(s.into()))
	}
	/// Storage: Tellor Tips (r:1 w:1)
	/// Proof: Tellor Tips (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:10 w:0)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor ReportersByTimestamp (r:10 w:0)
	/// Proof: Tellor ReportersByTimestamp (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:1 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:5000 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:5000 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:1)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:0)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:0)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdsWithFundingIndex (r:1 w:1)
	/// Proof: Tellor QueryIdsWithFundingIndex (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor QueryIdsWithFunding (r:1 w:1)
	/// Proof: Tellor QueryIdsWithFunding (max_values: Some(1), max_size: Some(321), added: 816, mode: MaxEncodedLen)
	/// The range of component `s` is `[1, 5000]`.
	/// The range of component `t` is `[1, 10]`.
	fn claim_onetime_tip(s: u32, t: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + s * (33 ±0) + t * (1022 ±0)`
		//  Estimated: `44890 + s * (5321 ±0) + t * (2138 ±248)`
		// Minimum execution time: 113_000_000 picoseconds.
		Weight::from_parts(113_000_000, 44890)
			// Standard Error: 50_232
			.saturating_add(Weight::from_parts(6_975_683, 0).saturating_mul(s.into()))
			// Standard Error: 25_053_798
			.saturating_add(Weight::from_parts(30_781_775, 0).saturating_mul(t.into()))
			.saturating_add(RocksDbWeight::get().reads(17_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(s.into())))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
			.saturating_add(Weight::from_parts(0, 5321).saturating_mul(s.into()))
			.saturating_add(Weight::from_parts(0, 2138).saturating_mul(t.into()))
	}
	/// Storage: Tellor DataFeeds (r:1 w:1)
	/// Proof: Tellor DataFeeds (max_values: None, max_size: Some(142), added: 2617, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportersByTimestamp (r:10 w:0)
	/// Proof: Tellor ReportersByTimestamp (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: Tellor DataFeedRewardClaimed (r:10 w:10)
	/// Proof: Tellor DataFeedRewardClaimed (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:11 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:1 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:29 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:10 w:0)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor FeedsWithFunding (r:1 w:1)
	/// Proof: Tellor FeedsWithFunding (max_values: Some(1), max_size: Some(321), added: 816, mode: MaxEncodedLen)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:1)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:0)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:0)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// The range of component `s` is `[1, 5000]`.
	/// The range of component `t` is `[1, 10]`.
	fn claim_tip(s: u32, _t: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1359 + s * (7 ±0)`
		//  Estimated: `39294 + s * (35 ±0)`
		// Minimum execution time: 100_000_000 picoseconds.
		Weight::from_parts(258_556_822, 39294)
			// Standard Error: 11_761
			.saturating_add(Weight::from_parts(332_066, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(15_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 35).saturating_mul(s.into()))
	}
	/// Storage: Tellor StakerDetails (r:2 w:0)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestamps (r:1 w:0)
	/// Proof: Tellor ReportedTimestamps (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Tellor VoteRounds (r:1 w:1)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeFee (r:1 w:0)
	/// Proof: Tellor DisputeFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor OpenDisputesOnId (r:1 w:1)
	/// Proof: Tellor OpenDisputesOnId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:1 w:1)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor ReportersByTimestamp (r:1 w:0)
	/// Proof: Tellor ReportersByTimestamp (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:1 w:1)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:1 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor VoteCount (r:1 w:1)
	/// Proof: Tellor VoteCount (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:0 w:1)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Tellor PendingVotes (r:0 w:1)
	/// Proof: Tellor PendingVotes (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeIdsByReporter (r:0 w:1)
	/// Proof: Tellor DisputeIdsByReporter (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeInfo (r:0 w:1)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	fn begin_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1313`
		//  Estimated: `44978`
		// Minimum execution time: 95_000_000 picoseconds.
		Weight::from_parts(104_000_000, 44978)
			.saturating_add(RocksDbWeight::get().reads(16_u64))
			.saturating_add(RocksDbWeight::get().writes(11_u64))
	}
	/// Storage: Tellor DisputeInfo (r:1 w:0)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	/// Storage: Tellor VoteRounds (r:1 w:0)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:1 w:1)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Tellor Votes (r:1 w:1)
	/// Proof: Tellor Votes (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: Tellor StakerDetails (r:1 w:0)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:0)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor VoteTallyByAddress (r:1 w:1)
	/// Proof: Tellor VoteTallyByAddress (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1063`
		//  Estimated: `25355`
		// Minimum execution time: 33_000_000 picoseconds.
		Weight::from_parts(34_000_000, 25355)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Tellor VoteRounds (r:1 w:0)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:1 w:1)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeInfo (r:1 w:0)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	fn report_vote_tallied() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1051`
		//  Estimated: `12557`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 12557)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Tellor DisputeInfo (r:1 w:0)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	/// Storage: Tellor VoteRounds (r:1 w:0)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:10 w:1)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor OpenDisputesOnId (r:1 w:1)
	/// Proof: Tellor OpenDisputesOnId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: System Account (r:11 w:11)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 255]`.
	fn report_vote_executed(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1321 + r * (22 ±0)`
		//  Estimated: `22078 + r * (188 ±0)`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(48_797_244, 22078)
			// Standard Error: 1_968
			.saturating_add(Weight::from_parts(702_755, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 188).saturating_mul(r.into()))
	}
	/// Storage: Tellor StakerDetails (r:1 w:1)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TimeOfLastAllocation (r:1 w:1)
	/// Proof: Tellor TimeOfLastAllocation (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakeAmount (r:1 w:1)
	/// Proof: Tellor TotalStakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor RewardRate (r:1 w:1)
	/// Proof: Tellor RewardRate (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor AccumulatedRewardPerShare (r:1 w:0)
	/// Proof: Tellor AccumulatedRewardPerShare (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor VoteCount (r:1 w:0)
	/// Proof: Tellor VoteCount (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor VoteTallyByAddress (r:1 w:0)
	/// Proof: Tellor VoteTallyByAddress (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor TotalRewardDebt (r:1 w:1)
	/// Proof: Tellor TotalRewardDebt (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor TotalStakers (r:1 w:1)
	/// Proof: Tellor TotalStakers (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:0)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tellor ToWithdraw (r:1 w:1)
	/// Proof: Tellor ToWithdraw (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn report_slash() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1003`
		//  Estimated: `25842`
		// Minimum execution time: 48_000_000 picoseconds.
		Weight::from_parts(54_000_000, 25842)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor PendingVotes (r:256 w:245)
	/// Proof: Tellor PendingVotes (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:245 w:245)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// The range of component `s` is `[1, 255]`.
	fn send_votes(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `348 + s * (290 ±0)`
		//  Estimated: `671654 + s * (2516 ±0)`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(13_000_000, 671654)
			// Standard Error: 119_194
			.saturating_add(Weight::from_parts(15_366_438, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(s.into())))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(s.into())))
			.saturating_add(Weight::from_parts(0, 2516).saturating_mul(s.into()))
	}
	/// Storage: Tellor DisputeInfo (r:10 w:0)
	/// Proof: Tellor DisputeInfo (max_values: None, max_size: Some(394), added: 2869, mode: MaxEncodedLen)
	/// Storage: Tellor VoteRounds (r:10 w:0)
	/// Proof: Tellor VoteRounds (max_values: None, max_size: Some(33), added: 2508, mode: MaxEncodedLen)
	/// Storage: Tellor VoteInfo (r:10 w:10)
	/// Proof: Tellor VoteInfo (max_values: None, max_size: Some(242), added: 2717, mode: MaxEncodedLen)
	/// Storage: Tellor Votes (r:10 w:10)
	/// Proof: Tellor Votes (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: Tellor StakerDetails (r:1 w:0)
	/// Proof: Tellor StakerDetails (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Tellor UserTipsTotal (r:1 w:0)
	/// Proof: Tellor UserTipsTotal (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Tellor VoteTallyByAddress (r:1 w:1)
	/// Proof: Tellor VoteTallyByAddress (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// The range of component `s` is `[2, 10]`.
	fn vote_on_multiple_disputes(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `754 + s * (358 ±0)`
		//  Estimated: `14696 + s * (10659 ±0)`
		// Minimum execution time: 61_000_000 picoseconds.
		Weight::from_parts(16_875_000, 14696)
			// Standard Error: 534_000
			.saturating_add(Weight::from_parts(22_812_500, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().reads((4_u64).saturating_mul(s.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(s.into())))
			.saturating_add(Weight::from_parts(0, 10659).saturating_mul(s.into()))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor LastStakeAmountUpdate (r:1 w:1)
	/// Proof: Tellor LastStakeAmountUpdate (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampCount (r:2 w:0)
	/// Proof: Tellor ReportedTimestampCount (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedTimestampsByIndex (r:2 w:0)
	/// Proof: Tellor ReportedTimestampsByIndex (max_values: None, max_size: Some(60), added: 2535, mode: MaxEncodedLen)
	/// Storage: Tellor ReportDisputes (r:2 w:0)
	/// Proof: Tellor ReportDisputes (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Tellor ReportedValuesByTimestamp (r:2 w:0)
	/// Proof: Tellor ReportedValuesByTimestamp (max_values: None, max_size: Some(314), added: 2789, mode: MaxEncodedLen)
	/// Storage: Tellor StakeAmount (r:1 w:1)
	/// Proof: Tellor StakeAmount (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Tellor DisputeFee (r:1 w:1)
	/// Proof: Tellor DisputeFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tellor PendingVotes (r:4 w:0)
	/// Proof: Tellor PendingVotes (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	fn on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1461`
		//  Estimated: `41752`
		// Minimum execution time: 75_000_000 picoseconds.
		Weight::from_parts(77_000_000, 41752)
			.saturating_add(RocksDbWeight::get().reads(16_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
}
